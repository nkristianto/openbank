// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/transactionmetadata/all.proto

package transactionmetadata

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	types "github.com/openbank/openbank/v1/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	// ID is the user identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	// Provider is the provider of the user.
	Provider string `protobuf:"bytes,2,opt,name=Provider,json=provider,proto3" json:"Provider,omitempty"`
	// DisplayName is the user's display name.
	DisplayName          string   `protobuf:"bytes,3,opt,name=DisplayName,json=display_name,proto3" json:"DisplayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *User) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type Tag struct {
	// ID is the tag identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	// Value is the tag content/value.
	Value string `protobuf:"bytes,2,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	// Date is the date the tag is created/updated.
	Date *timestamp.Timestamp `protobuf:"bytes,3,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	// User is the user information.
	User                 *User    `protobuf:"bytes,4,opt,name=User,json=user,proto3" json:"User,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{1}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Tag) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Tag) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Image struct {
	// ID is the image identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	// Label is the label of the image.
	Label string `protobuf:"bytes,2,opt,name=Label,json=label,proto3" json:"Label,omitempty"`
	// URL is the image URL.
	URL string `protobuf:"bytes,3,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	// Date is the date the image is created/updated.
	Date *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	// User is the user information.
	User                 *User    `protobuf:"bytes,5,opt,name=User,json=user,proto3" json:"User,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{2}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Image) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Image) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *Image) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Image) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Comment struct {
	// ID is the image identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	// Value is the comment content/value.
	Value string `protobuf:"bytes,2,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	// Date is the date the tag is created/updated.
	Date *timestamp.Timestamp `protobuf:"bytes,3,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	// User is the user information.
	User                 *User    `protobuf:"bytes,4,opt,name=User,json=user,proto3" json:"User,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{3}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Comment) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Comment) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Comment) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Narrative struct {
	// Narrative is the content of the narrative.
	Narrative            string   `protobuf:"bytes,1,opt,name=Narrative,json=narrative,proto3" json:"Narrative,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Narrative) Reset()         { *m = Narrative{} }
func (m *Narrative) String() string { return proto.CompactTextString(m) }
func (*Narrative) ProtoMessage()    {}
func (*Narrative) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{4}
}

func (m *Narrative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Narrative.Unmarshal(m, b)
}
func (m *Narrative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Narrative.Marshal(b, m, deterministic)
}
func (m *Narrative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Narrative.Merge(m, src)
}
func (m *Narrative) XXX_Size() int {
	return xxx_messageInfo_Narrative.Size(m)
}
func (m *Narrative) XXX_DiscardUnknown() {
	xxx_messageInfo_Narrative.DiscardUnknown(m)
}

var xxx_messageInfo_Narrative proto.InternalMessageInfo

func (m *Narrative) GetNarrative() string {
	if m != nil {
		return m.Narrative
	}
	return ""
}

type WhereTag struct {
	// Location is the latitude and longitude information of the tag.
	Location *types.Location `protobuf:"bytes,1,opt,name=Location,json=location,proto3" json:"Location,omitempty"`
	// Date is the date the geo information is created/updated.
	Date *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	// User is the user information.
	User                 *User    `protobuf:"bytes,3,opt,name=User,json=user,proto3" json:"User,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WhereTag) Reset()         { *m = WhereTag{} }
func (m *WhereTag) String() string { return proto.CompactTextString(m) }
func (*WhereTag) ProtoMessage()    {}
func (*WhereTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{5}
}

func (m *WhereTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WhereTag.Unmarshal(m, b)
}
func (m *WhereTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WhereTag.Marshal(b, m, deterministic)
}
func (m *WhereTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhereTag.Merge(m, src)
}
func (m *WhereTag) XXX_Size() int {
	return xxx_messageInfo_WhereTag.Size(m)
}
func (m *WhereTag) XXX_DiscardUnknown() {
	xxx_messageInfo_WhereTag.DiscardUnknown(m)
}

var xxx_messageInfo_WhereTag proto.InternalMessageInfo

func (m *WhereTag) GetLocation() *types.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *WhereTag) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *WhereTag) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type CreateTagRequest struct {
	// Tag is the tag metadata made on a transaction.
	Tag *Tag `protobuf:"bytes,1,opt,name=Tag,json=tag,proto3" json:"Tag,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTagRequest) Reset()         { *m = CreateTagRequest{} }
func (m *CreateTagRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTagRequest) ProtoMessage()    {}
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{6}
}

func (m *CreateTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTagRequest.Unmarshal(m, b)
}
func (m *CreateTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTagRequest.Marshal(b, m, deterministic)
}
func (m *CreateTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTagRequest.Merge(m, src)
}
func (m *CreateTagRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTagRequest.Size(m)
}
func (m *CreateTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTagRequest proto.InternalMessageInfo

func (m *CreateTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *CreateTagRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateTagRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateTagRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type UpdateTagRequest struct {
	// Tag is the tag metadata made on a transaction.
	Tag *Tag `protobuf:"bytes,1,opt,name=Tag,json=tag,proto3" json:"Tag,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTagRequest) Reset()         { *m = UpdateTagRequest{} }
func (m *UpdateTagRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTagRequest) ProtoMessage()    {}
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{7}
}

func (m *UpdateTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTagRequest.Unmarshal(m, b)
}
func (m *UpdateTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTagRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTagRequest.Merge(m, src)
}
func (m *UpdateTagRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTagRequest.Size(m)
}
func (m *UpdateTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTagRequest proto.InternalMessageInfo

func (m *UpdateTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *UpdateTagRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateTagRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateTagRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type DeleteTagRequest struct {
	// ID is the tag id that will be deleted.
	ID string `protobuf:"bytes,1,opt,name=ID,json=tag,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTagRequest) Reset()         { *m = DeleteTagRequest{} }
func (m *DeleteTagRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTagRequest) ProtoMessage()    {}
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{8}
}

func (m *DeleteTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTagRequest.Unmarshal(m, b)
}
func (m *DeleteTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTagRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTagRequest.Merge(m, src)
}
func (m *DeleteTagRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTagRequest.Size(m)
}
func (m *DeleteTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTagRequest proto.InternalMessageInfo

func (m *DeleteTagRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DeleteTagRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteTagRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteTagRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetTagRequest struct {
	// ID is the tag unique identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=tag,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagRequest) Reset()         { *m = GetTagRequest{} }
func (m *GetTagRequest) String() string { return proto.CompactTextString(m) }
func (*GetTagRequest) ProtoMessage()    {}
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{9}
}

func (m *GetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagRequest.Unmarshal(m, b)
}
func (m *GetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagRequest.Marshal(b, m, deterministic)
}
func (m *GetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagRequest.Merge(m, src)
}
func (m *GetTagRequest) XXX_Size() int {
	return xxx_messageInfo_GetTagRequest.Size(m)
}
func (m *GetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagRequest proto.InternalMessageInfo

func (m *GetTagRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetTagRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetTagRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetTagRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetTagsRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,3,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsRequest) Reset()         { *m = GetTagsRequest{} }
func (m *GetTagsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTagsRequest) ProtoMessage()    {}
func (*GetTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{10}
}

func (m *GetTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsRequest.Unmarshal(m, b)
}
func (m *GetTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsRequest.Marshal(b, m, deterministic)
}
func (m *GetTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsRequest.Merge(m, src)
}
func (m *GetTagsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTagsRequest.Size(m)
}
func (m *GetTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsRequest proto.InternalMessageInfo

func (m *GetTagsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetTagsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetTagsRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetTagsResponse struct {
	// Tags is the list of tags.
	Tags []*Tag `protobuf:"bytes,1,rep,name=Tags,json=tags,proto3" json:"Tags,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsResponse) Reset()         { *m = GetTagsResponse{} }
func (m *GetTagsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTagsResponse) ProtoMessage()    {}
func (*GetTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{11}
}

func (m *GetTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsResponse.Unmarshal(m, b)
}
func (m *GetTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsResponse.Marshal(b, m, deterministic)
}
func (m *GetTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsResponse.Merge(m, src)
}
func (m *GetTagsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTagsResponse.Size(m)
}
func (m *GetTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsResponse proto.InternalMessageInfo

func (m *GetTagsResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *GetTagsResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetTagsResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetTagsResponse) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type CreateImageRequest struct {
	// Image is the image metadata made on a transaction.
	Image *Image `protobuf:"bytes,1,opt,name=Image,json=image,proto3" json:"Image,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateImageRequest) Reset()         { *m = CreateImageRequest{} }
func (m *CreateImageRequest) String() string { return proto.CompactTextString(m) }
func (*CreateImageRequest) ProtoMessage()    {}
func (*CreateImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{12}
}

func (m *CreateImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateImageRequest.Unmarshal(m, b)
}
func (m *CreateImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateImageRequest.Marshal(b, m, deterministic)
}
func (m *CreateImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateImageRequest.Merge(m, src)
}
func (m *CreateImageRequest) XXX_Size() int {
	return xxx_messageInfo_CreateImageRequest.Size(m)
}
func (m *CreateImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateImageRequest proto.InternalMessageInfo

func (m *CreateImageRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *CreateImageRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateImageRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateImageRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type UpdateImageRequest struct {
	// Image is the image metadata made on a transaction.
	Image *Image `protobuf:"bytes,1,opt,name=Image,json=image,proto3" json:"Image,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateImageRequest) Reset()         { *m = UpdateImageRequest{} }
func (m *UpdateImageRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateImageRequest) ProtoMessage()    {}
func (*UpdateImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{13}
}

func (m *UpdateImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateImageRequest.Unmarshal(m, b)
}
func (m *UpdateImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateImageRequest.Marshal(b, m, deterministic)
}
func (m *UpdateImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateImageRequest.Merge(m, src)
}
func (m *UpdateImageRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateImageRequest.Size(m)
}
func (m *UpdateImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateImageRequest proto.InternalMessageInfo

func (m *UpdateImageRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *UpdateImageRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateImageRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateImageRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type DeleteImageRequest struct {
	// ID is the image id that will be deleted.
	ID string `protobuf:"bytes,1,opt,name=ID,json=image,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteImageRequest) Reset()         { *m = DeleteImageRequest{} }
func (m *DeleteImageRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteImageRequest) ProtoMessage()    {}
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{14}
}

func (m *DeleteImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteImageRequest.Unmarshal(m, b)
}
func (m *DeleteImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteImageRequest.Marshal(b, m, deterministic)
}
func (m *DeleteImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteImageRequest.Merge(m, src)
}
func (m *DeleteImageRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteImageRequest.Size(m)
}
func (m *DeleteImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteImageRequest proto.InternalMessageInfo

func (m *DeleteImageRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DeleteImageRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteImageRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteImageRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetImageRequest struct {
	// ID is the image unique identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=image,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImageRequest) Reset()         { *m = GetImageRequest{} }
func (m *GetImageRequest) String() string { return proto.CompactTextString(m) }
func (*GetImageRequest) ProtoMessage()    {}
func (*GetImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{15}
}

func (m *GetImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageRequest.Unmarshal(m, b)
}
func (m *GetImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageRequest.Marshal(b, m, deterministic)
}
func (m *GetImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageRequest.Merge(m, src)
}
func (m *GetImageRequest) XXX_Size() int {
	return xxx_messageInfo_GetImageRequest.Size(m)
}
func (m *GetImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageRequest proto.InternalMessageInfo

func (m *GetImageRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetImageRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetImageRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetImageRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetImagesRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,3,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImagesRequest) Reset()         { *m = GetImagesRequest{} }
func (m *GetImagesRequest) String() string { return proto.CompactTextString(m) }
func (*GetImagesRequest) ProtoMessage()    {}
func (*GetImagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{16}
}

func (m *GetImagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImagesRequest.Unmarshal(m, b)
}
func (m *GetImagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImagesRequest.Marshal(b, m, deterministic)
}
func (m *GetImagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImagesRequest.Merge(m, src)
}
func (m *GetImagesRequest) XXX_Size() int {
	return xxx_messageInfo_GetImagesRequest.Size(m)
}
func (m *GetImagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImagesRequest proto.InternalMessageInfo

func (m *GetImagesRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetImagesRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetImagesRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetImagesResponse struct {
	// Images is the list of images.
	Images []*Image `protobuf:"bytes,1,rep,name=Images,json=images,proto3" json:"Images,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImagesResponse) Reset()         { *m = GetImagesResponse{} }
func (m *GetImagesResponse) String() string { return proto.CompactTextString(m) }
func (*GetImagesResponse) ProtoMessage()    {}
func (*GetImagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{17}
}

func (m *GetImagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImagesResponse.Unmarshal(m, b)
}
func (m *GetImagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImagesResponse.Marshal(b, m, deterministic)
}
func (m *GetImagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImagesResponse.Merge(m, src)
}
func (m *GetImagesResponse) XXX_Size() int {
	return xxx_messageInfo_GetImagesResponse.Size(m)
}
func (m *GetImagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetImagesResponse proto.InternalMessageInfo

func (m *GetImagesResponse) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *GetImagesResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetImagesResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetImagesResponse) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type CreateCommentRequest struct {
	// Comment is the comment metadata made on a transaction.
	Comment *Comment `protobuf:"bytes,1,opt,name=Comment,json=comment,proto3" json:"Comment,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommentRequest) Reset()         { *m = CreateCommentRequest{} }
func (m *CreateCommentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCommentRequest) ProtoMessage()    {}
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{18}
}

func (m *CreateCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommentRequest.Unmarshal(m, b)
}
func (m *CreateCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommentRequest.Marshal(b, m, deterministic)
}
func (m *CreateCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommentRequest.Merge(m, src)
}
func (m *CreateCommentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCommentRequest.Size(m)
}
func (m *CreateCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommentRequest proto.InternalMessageInfo

func (m *CreateCommentRequest) GetComment() *Comment {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *CreateCommentRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateCommentRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateCommentRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type UpdateCommentRequest struct {
	// Comment is the comment metadata made on a transaction.
	Comment *Comment `protobuf:"bytes,1,opt,name=Comment,json=comment,proto3" json:"Comment,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCommentRequest) Reset()         { *m = UpdateCommentRequest{} }
func (m *UpdateCommentRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCommentRequest) ProtoMessage()    {}
func (*UpdateCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{19}
}

func (m *UpdateCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCommentRequest.Unmarshal(m, b)
}
func (m *UpdateCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCommentRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCommentRequest.Merge(m, src)
}
func (m *UpdateCommentRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCommentRequest.Size(m)
}
func (m *UpdateCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCommentRequest proto.InternalMessageInfo

func (m *UpdateCommentRequest) GetComment() *Comment {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *UpdateCommentRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateCommentRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateCommentRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type DeleteCommentRequest struct {
	// ID is the comment id that will be deleted.
	ID string `protobuf:"bytes,1,opt,name=ID,json=comment,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommentRequest) Reset()         { *m = DeleteCommentRequest{} }
func (m *DeleteCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentRequest) ProtoMessage()    {}
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{20}
}

func (m *DeleteCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentRequest.Unmarshal(m, b)
}
func (m *DeleteCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentRequest.Merge(m, src)
}
func (m *DeleteCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentRequest.Size(m)
}
func (m *DeleteCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentRequest proto.InternalMessageInfo

func (m *DeleteCommentRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DeleteCommentRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteCommentRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteCommentRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetCommentRequest struct {
	// ID is the comment unique identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=comment,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommentRequest) Reset()         { *m = GetCommentRequest{} }
func (m *GetCommentRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommentRequest) ProtoMessage()    {}
func (*GetCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{21}
}

func (m *GetCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommentRequest.Unmarshal(m, b)
}
func (m *GetCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommentRequest.Marshal(b, m, deterministic)
}
func (m *GetCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommentRequest.Merge(m, src)
}
func (m *GetCommentRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommentRequest.Size(m)
}
func (m *GetCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommentRequest proto.InternalMessageInfo

func (m *GetCommentRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetCommentRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetCommentRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetCommentRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetCommentsRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,3,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommentsRequest) Reset()         { *m = GetCommentsRequest{} }
func (m *GetCommentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommentsRequest) ProtoMessage()    {}
func (*GetCommentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{22}
}

func (m *GetCommentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommentsRequest.Unmarshal(m, b)
}
func (m *GetCommentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommentsRequest.Marshal(b, m, deterministic)
}
func (m *GetCommentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommentsRequest.Merge(m, src)
}
func (m *GetCommentsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommentsRequest.Size(m)
}
func (m *GetCommentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommentsRequest proto.InternalMessageInfo

func (m *GetCommentsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetCommentsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetCommentsRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetCommentsResponse struct {
	// Comments is the list of comments.
	Comments []*Comment `protobuf:"bytes,1,rep,name=Comments,json=comments,proto3" json:"Comments,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommentsResponse) Reset()         { *m = GetCommentsResponse{} }
func (m *GetCommentsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCommentsResponse) ProtoMessage()    {}
func (*GetCommentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{23}
}

func (m *GetCommentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommentsResponse.Unmarshal(m, b)
}
func (m *GetCommentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommentsResponse.Marshal(b, m, deterministic)
}
func (m *GetCommentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommentsResponse.Merge(m, src)
}
func (m *GetCommentsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCommentsResponse.Size(m)
}
func (m *GetCommentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommentsResponse proto.InternalMessageInfo

func (m *GetCommentsResponse) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *GetCommentsResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetCommentsResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetCommentsResponse) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type CreateNarrativeRequest struct {
	// Narrative is the narrative metadata made on a transaction.
	Narrative *Narrative `protobuf:"bytes,1,opt,name=Narrative,json=narrative,proto3" json:"Narrative,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNarrativeRequest) Reset()         { *m = CreateNarrativeRequest{} }
func (m *CreateNarrativeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNarrativeRequest) ProtoMessage()    {}
func (*CreateNarrativeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{24}
}

func (m *CreateNarrativeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNarrativeRequest.Unmarshal(m, b)
}
func (m *CreateNarrativeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNarrativeRequest.Marshal(b, m, deterministic)
}
func (m *CreateNarrativeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNarrativeRequest.Merge(m, src)
}
func (m *CreateNarrativeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNarrativeRequest.Size(m)
}
func (m *CreateNarrativeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNarrativeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNarrativeRequest proto.InternalMessageInfo

func (m *CreateNarrativeRequest) GetNarrative() *Narrative {
	if m != nil {
		return m.Narrative
	}
	return nil
}

func (m *CreateNarrativeRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateNarrativeRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateNarrativeRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type UpdateNarrativeRequest struct {
	// Narrative is the narrative metadata made on a transaction.
	Narrative *Narrative `protobuf:"bytes,1,opt,name=Narrative,json=narrative,proto3" json:"Narrative,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNarrativeRequest) Reset()         { *m = UpdateNarrativeRequest{} }
func (m *UpdateNarrativeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNarrativeRequest) ProtoMessage()    {}
func (*UpdateNarrativeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{25}
}

func (m *UpdateNarrativeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNarrativeRequest.Unmarshal(m, b)
}
func (m *UpdateNarrativeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNarrativeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNarrativeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNarrativeRequest.Merge(m, src)
}
func (m *UpdateNarrativeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNarrativeRequest.Size(m)
}
func (m *UpdateNarrativeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNarrativeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNarrativeRequest proto.InternalMessageInfo

func (m *UpdateNarrativeRequest) GetNarrative() *Narrative {
	if m != nil {
		return m.Narrative
	}
	return nil
}

func (m *UpdateNarrativeRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateNarrativeRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateNarrativeRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type DeleteNarrativeRequest struct {
	// ID is the narrative id that will be deleted.
	ID string `protobuf:"bytes,1,opt,name=ID,json=narrative,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNarrativeRequest) Reset()         { *m = DeleteNarrativeRequest{} }
func (m *DeleteNarrativeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNarrativeRequest) ProtoMessage()    {}
func (*DeleteNarrativeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{26}
}

func (m *DeleteNarrativeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNarrativeRequest.Unmarshal(m, b)
}
func (m *DeleteNarrativeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNarrativeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNarrativeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNarrativeRequest.Merge(m, src)
}
func (m *DeleteNarrativeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNarrativeRequest.Size(m)
}
func (m *DeleteNarrativeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNarrativeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNarrativeRequest proto.InternalMessageInfo

func (m *DeleteNarrativeRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DeleteNarrativeRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteNarrativeRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteNarrativeRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetNarrativeRequest struct {
	// ID is the narrative unique identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=narrative,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNarrativeRequest) Reset()         { *m = GetNarrativeRequest{} }
func (m *GetNarrativeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNarrativeRequest) ProtoMessage()    {}
func (*GetNarrativeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{27}
}

func (m *GetNarrativeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNarrativeRequest.Unmarshal(m, b)
}
func (m *GetNarrativeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNarrativeRequest.Marshal(b, m, deterministic)
}
func (m *GetNarrativeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNarrativeRequest.Merge(m, src)
}
func (m *GetNarrativeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNarrativeRequest.Size(m)
}
func (m *GetNarrativeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNarrativeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNarrativeRequest proto.InternalMessageInfo

func (m *GetNarrativeRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetNarrativeRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetNarrativeRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetNarrativeRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetNarrativesRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,3,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNarrativesRequest) Reset()         { *m = GetNarrativesRequest{} }
func (m *GetNarrativesRequest) String() string { return proto.CompactTextString(m) }
func (*GetNarrativesRequest) ProtoMessage()    {}
func (*GetNarrativesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{28}
}

func (m *GetNarrativesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNarrativesRequest.Unmarshal(m, b)
}
func (m *GetNarrativesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNarrativesRequest.Marshal(b, m, deterministic)
}
func (m *GetNarrativesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNarrativesRequest.Merge(m, src)
}
func (m *GetNarrativesRequest) XXX_Size() int {
	return xxx_messageInfo_GetNarrativesRequest.Size(m)
}
func (m *GetNarrativesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNarrativesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNarrativesRequest proto.InternalMessageInfo

func (m *GetNarrativesRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetNarrativesRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetNarrativesRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetNarrativesResponse struct {
	// Narratives is the list of narratives.
	Narratives []*Narrative `protobuf:"bytes,1,rep,name=Narratives,json=narratives,proto3" json:"Narratives,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNarrativesResponse) Reset()         { *m = GetNarrativesResponse{} }
func (m *GetNarrativesResponse) String() string { return proto.CompactTextString(m) }
func (*GetNarrativesResponse) ProtoMessage()    {}
func (*GetNarrativesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{29}
}

func (m *GetNarrativesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNarrativesResponse.Unmarshal(m, b)
}
func (m *GetNarrativesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNarrativesResponse.Marshal(b, m, deterministic)
}
func (m *GetNarrativesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNarrativesResponse.Merge(m, src)
}
func (m *GetNarrativesResponse) XXX_Size() int {
	return xxx_messageInfo_GetNarrativesResponse.Size(m)
}
func (m *GetNarrativesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNarrativesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNarrativesResponse proto.InternalMessageInfo

func (m *GetNarrativesResponse) GetNarratives() []*Narrative {
	if m != nil {
		return m.Narratives
	}
	return nil
}

func (m *GetNarrativesResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetNarrativesResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetNarrativesResponse) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type CreateWhereTagRequest struct {
	// WhereTag is the where tag metadata made on a transaction.
	WhereTag *WhereTag `protobuf:"bytes,1,opt,name=WhereTag,json=where_tag,proto3" json:"WhereTag,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWhereTagRequest) Reset()         { *m = CreateWhereTagRequest{} }
func (m *CreateWhereTagRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWhereTagRequest) ProtoMessage()    {}
func (*CreateWhereTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{30}
}

func (m *CreateWhereTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWhereTagRequest.Unmarshal(m, b)
}
func (m *CreateWhereTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWhereTagRequest.Marshal(b, m, deterministic)
}
func (m *CreateWhereTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWhereTagRequest.Merge(m, src)
}
func (m *CreateWhereTagRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWhereTagRequest.Size(m)
}
func (m *CreateWhereTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWhereTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWhereTagRequest proto.InternalMessageInfo

func (m *CreateWhereTagRequest) GetWhereTag() *WhereTag {
	if m != nil {
		return m.WhereTag
	}
	return nil
}

func (m *CreateWhereTagRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateWhereTagRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateWhereTagRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type UpdateWhereTagRequest struct {
	// WhereTag is the where tag metadata made on a transaction.
	WhereTag *WhereTag `protobuf:"bytes,1,opt,name=WhereTag,json=where_tag,proto3" json:"WhereTag,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWhereTagRequest) Reset()         { *m = UpdateWhereTagRequest{} }
func (m *UpdateWhereTagRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWhereTagRequest) ProtoMessage()    {}
func (*UpdateWhereTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{31}
}

func (m *UpdateWhereTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWhereTagRequest.Unmarshal(m, b)
}
func (m *UpdateWhereTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWhereTagRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWhereTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWhereTagRequest.Merge(m, src)
}
func (m *UpdateWhereTagRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWhereTagRequest.Size(m)
}
func (m *UpdateWhereTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWhereTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWhereTagRequest proto.InternalMessageInfo

func (m *UpdateWhereTagRequest) GetWhereTag() *WhereTag {
	if m != nil {
		return m.WhereTag
	}
	return nil
}

func (m *UpdateWhereTagRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateWhereTagRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateWhereTagRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type DeleteWhereTagRequest struct {
	// ID is the where tag id that will be deleted.
	ID string `protobuf:"bytes,1,opt,name=ID,json=where_tag,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteWhereTagRequest) Reset()         { *m = DeleteWhereTagRequest{} }
func (m *DeleteWhereTagRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteWhereTagRequest) ProtoMessage()    {}
func (*DeleteWhereTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{32}
}

func (m *DeleteWhereTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteWhereTagRequest.Unmarshal(m, b)
}
func (m *DeleteWhereTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteWhereTagRequest.Marshal(b, m, deterministic)
}
func (m *DeleteWhereTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteWhereTagRequest.Merge(m, src)
}
func (m *DeleteWhereTagRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteWhereTagRequest.Size(m)
}
func (m *DeleteWhereTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteWhereTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteWhereTagRequest proto.InternalMessageInfo

func (m *DeleteWhereTagRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DeleteWhereTagRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteWhereTagRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteWhereTagRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetWhereTagRequest struct {
	// ID is the where tag unique identifier.
	ID string `protobuf:"bytes,1,opt,name=ID,json=where_tag,proto3" json:"ID,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWhereTagRequest) Reset()         { *m = GetWhereTagRequest{} }
func (m *GetWhereTagRequest) String() string { return proto.CompactTextString(m) }
func (*GetWhereTagRequest) ProtoMessage()    {}
func (*GetWhereTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{33}
}

func (m *GetWhereTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWhereTagRequest.Unmarshal(m, b)
}
func (m *GetWhereTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWhereTagRequest.Marshal(b, m, deterministic)
}
func (m *GetWhereTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWhereTagRequest.Merge(m, src)
}
func (m *GetWhereTagRequest) XXX_Size() int {
	return xxx_messageInfo_GetWhereTagRequest.Size(m)
}
func (m *GetWhereTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWhereTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWhereTagRequest proto.InternalMessageInfo

func (m *GetWhereTagRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetWhereTagRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetWhereTagRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetWhereTagRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetWhereTagsRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,3,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWhereTagsRequest) Reset()         { *m = GetWhereTagsRequest{} }
func (m *GetWhereTagsRequest) String() string { return proto.CompactTextString(m) }
func (*GetWhereTagsRequest) ProtoMessage()    {}
func (*GetWhereTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{34}
}

func (m *GetWhereTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWhereTagsRequest.Unmarshal(m, b)
}
func (m *GetWhereTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWhereTagsRequest.Marshal(b, m, deterministic)
}
func (m *GetWhereTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWhereTagsRequest.Merge(m, src)
}
func (m *GetWhereTagsRequest) XXX_Size() int {
	return xxx_messageInfo_GetWhereTagsRequest.Size(m)
}
func (m *GetWhereTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWhereTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWhereTagsRequest proto.InternalMessageInfo

func (m *GetWhereTagsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetWhereTagsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetWhereTagsRequest) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type GetWhereTagsResponse struct {
	// WhereTags is the list of where tags.
	WhereTags []*WhereTag `protobuf:"bytes,1,rep,name=WhereTags,json=where_tags,proto3" json:"WhereTags,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TransactionID is the transaction identifier.
	TransactionID        string   `protobuf:"bytes,4,opt,name=TransactionID,json=transaction_id,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWhereTagsResponse) Reset()         { *m = GetWhereTagsResponse{} }
func (m *GetWhereTagsResponse) String() string { return proto.CompactTextString(m) }
func (*GetWhereTagsResponse) ProtoMessage()    {}
func (*GetWhereTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3aa067b964032073, []int{35}
}

func (m *GetWhereTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWhereTagsResponse.Unmarshal(m, b)
}
func (m *GetWhereTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWhereTagsResponse.Marshal(b, m, deterministic)
}
func (m *GetWhereTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWhereTagsResponse.Merge(m, src)
}
func (m *GetWhereTagsResponse) XXX_Size() int {
	return xxx_messageInfo_GetWhereTagsResponse.Size(m)
}
func (m *GetWhereTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWhereTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWhereTagsResponse proto.InternalMessageInfo

func (m *GetWhereTagsResponse) GetWhereTags() []*WhereTag {
	if m != nil {
		return m.WhereTags
	}
	return nil
}

func (m *GetWhereTagsResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetWhereTagsResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetWhereTagsResponse) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "transactionmetadata.User")
	proto.RegisterType((*Tag)(nil), "transactionmetadata.Tag")
	proto.RegisterType((*Image)(nil), "transactionmetadata.Image")
	proto.RegisterType((*Comment)(nil), "transactionmetadata.Comment")
	proto.RegisterType((*Narrative)(nil), "transactionmetadata.Narrative")
	proto.RegisterType((*WhereTag)(nil), "transactionmetadata.WhereTag")
	proto.RegisterType((*CreateTagRequest)(nil), "transactionmetadata.CreateTagRequest")
	proto.RegisterType((*UpdateTagRequest)(nil), "transactionmetadata.UpdateTagRequest")
	proto.RegisterType((*DeleteTagRequest)(nil), "transactionmetadata.DeleteTagRequest")
	proto.RegisterType((*GetTagRequest)(nil), "transactionmetadata.GetTagRequest")
	proto.RegisterType((*GetTagsRequest)(nil), "transactionmetadata.GetTagsRequest")
	proto.RegisterType((*GetTagsResponse)(nil), "transactionmetadata.GetTagsResponse")
	proto.RegisterType((*CreateImageRequest)(nil), "transactionmetadata.CreateImageRequest")
	proto.RegisterType((*UpdateImageRequest)(nil), "transactionmetadata.UpdateImageRequest")
	proto.RegisterType((*DeleteImageRequest)(nil), "transactionmetadata.DeleteImageRequest")
	proto.RegisterType((*GetImageRequest)(nil), "transactionmetadata.GetImageRequest")
	proto.RegisterType((*GetImagesRequest)(nil), "transactionmetadata.GetImagesRequest")
	proto.RegisterType((*GetImagesResponse)(nil), "transactionmetadata.GetImagesResponse")
	proto.RegisterType((*CreateCommentRequest)(nil), "transactionmetadata.CreateCommentRequest")
	proto.RegisterType((*UpdateCommentRequest)(nil), "transactionmetadata.UpdateCommentRequest")
	proto.RegisterType((*DeleteCommentRequest)(nil), "transactionmetadata.DeleteCommentRequest")
	proto.RegisterType((*GetCommentRequest)(nil), "transactionmetadata.GetCommentRequest")
	proto.RegisterType((*GetCommentsRequest)(nil), "transactionmetadata.GetCommentsRequest")
	proto.RegisterType((*GetCommentsResponse)(nil), "transactionmetadata.GetCommentsResponse")
	proto.RegisterType((*CreateNarrativeRequest)(nil), "transactionmetadata.CreateNarrativeRequest")
	proto.RegisterType((*UpdateNarrativeRequest)(nil), "transactionmetadata.UpdateNarrativeRequest")
	proto.RegisterType((*DeleteNarrativeRequest)(nil), "transactionmetadata.DeleteNarrativeRequest")
	proto.RegisterType((*GetNarrativeRequest)(nil), "transactionmetadata.GetNarrativeRequest")
	proto.RegisterType((*GetNarrativesRequest)(nil), "transactionmetadata.GetNarrativesRequest")
	proto.RegisterType((*GetNarrativesResponse)(nil), "transactionmetadata.GetNarrativesResponse")
	proto.RegisterType((*CreateWhereTagRequest)(nil), "transactionmetadata.CreateWhereTagRequest")
	proto.RegisterType((*UpdateWhereTagRequest)(nil), "transactionmetadata.UpdateWhereTagRequest")
	proto.RegisterType((*DeleteWhereTagRequest)(nil), "transactionmetadata.DeleteWhereTagRequest")
	proto.RegisterType((*GetWhereTagRequest)(nil), "transactionmetadata.GetWhereTagRequest")
	proto.RegisterType((*GetWhereTagsRequest)(nil), "transactionmetadata.GetWhereTagsRequest")
	proto.RegisterType((*GetWhereTagsResponse)(nil), "transactionmetadata.GetWhereTagsResponse")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/transactionmetadata/all.proto", fileDescriptor_3aa067b964032073)
}

var fileDescriptor_3aa067b964032073 = []byte{
	// 3162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x5c, 0x6b, 0x6c, 0x1c, 0xd5,
	0xf5, 0xdf, 0x99, 0x71, 0x1c, 0xfb, 0x98, 0x24, 0xe6, 0x26, 0x20, 0x33, 0x8e, 0xe3, 0x89, 0xe1,
	0x9f, 0x38, 0x86, 0xcc, 0xda, 0xc6, 0x84, 0x60, 0xc1, 0xbf, 0x9a, 0xc4, 0x01, 0xbc, 0x0a, 0x60,
	0x8c, 0x63, 0x4c, 0x78, 0x58, 0xd7, 0x3b, 0xd7, 0xeb, 0x81, 0xdd, 0x99, 0xed, 0xcc, 0xac, 0x8d,
	0x1b, 0xa5, 0x2a, 0xa8, 0x6a, 0x43, 0x1f, 0x08, 0x2d, 0xad, 0x2a, 0xd4, 0x07, 0xad, 0x5a, 0xa9,
	0xaa, 0xd4, 0xf6, 0x43, 0x5f, 0x54, 0xb4, 0x6a, 0xa5, 0x54, 0xa5, 0x55, 0xd5, 0x0f, 0x48, 0x55,
	0x11, 0xaa, 0x04, 0x95, 0xaa, 0x96, 0x96, 0x96, 0xa2, 0x3e, 0xa4, 0x3e, 0xa4, 0x52, 0x55, 0x33,
	0x77, 0xde, 0x9e, 0xbb, 0xe3, 0x0d, 0xeb, 0x68, 0x03, 0x9f, 0x92, 0xb9, 0xef, 0x73, 0x7e, 0xf7,
	0xfe, 0xce, 0x6f, 0xe6, 0x5c, 0x2f, 0xdc, 0x52, 0xd2, 0xec, 0x95, 0xda, 0x92, 0x5c, 0x34, 0x2a,
	0x79, 0xa3, 0x4a, 0xf4, 0x25, 0xac, 0x3f, 0x12, 0xfe, 0x67, 0x75, 0x2c, 0x6f, 0x9b, 0x58, 0xb7,
	0x70, 0xd1, 0xd6, 0x0c, 0xbd, 0x42, 0x6c, 0xac, 0x62, 0x1b, 0xe7, 0x71, 0xb9, 0x2c, 0x57, 0x4d,
	0xc3, 0x36, 0xd0, 0xee, 0x94, 0x6a, 0x71, 0xb0, 0x64, 0x18, 0xa5, 0x32, 0xc9, 0xbb, 0x4d, 0x96,
	0x6a, 0xcb, 0x79, 0x5b, 0xab, 0x10, 0xcb, 0xc6, 0x95, 0x2a, 0xed, 0x25, 0xee, 0xf5, 0x1a, 0xe0,
	0xaa, 0x96, 0xc7, 0xba, 0x6e, 0xd8, 0xd8, 0xe9, 0x6f, 0x79, 0xb5, 0xd7, 0xb9, 0xff, 0x14, 0x0f,
	0x97, 0x88, 0x7e, 0xd8, 0x5a, 0xc3, 0xa5, 0x12, 0x31, 0xf3, 0x46, 0xd5, 0x6d, 0x91, 0xd2, 0xba,
	0x3f, 0x39, 0x19, 0xa9, 0x54, 0xed, 0x75, 0xaf, 0x32, 0x9f, 0x69, 0xdd, 0x7a, 0x95, 0x58, 0xa1,
	0x3d, 0x43, 0x8f, 0x71, 0xd0, 0x71, 0xca, 0x22, 0x26, 0x12, 0x81, 0x9f, 0x9e, 0xea, 0xe3, 0x24,
	0x6e, 0xb8, 0xfb, 0x18, 0x74, 0xe5, 0xfa, 0x72, 0xc3, 0xb9, 0xd1, 0xdc, 0x4c, 0x6e, 0x96, 0xd7,
	0x54, 0x74, 0x00, 0xba, 0x66, 0x4c, 0x63, 0x55, 0x53, 0x89, 0xd9, 0xc7, 0x6f, 0x68, 0xd1, 0x55,
	0xf5, 0xea, 0xd0, 0x61, 0xe8, 0x99, 0xd2, 0xac, 0x6a, 0x19, 0xaf, 0xdf, 0x89, 0x2b, 0xa4, 0x4f,
	0xd8, 0xd0, 0xf4, 0x32, 0x95, 0x56, 0x2f, 0xea, 0xb8, 0x42, 0x26, 0x3b, 0xbb, 0x72, 0xbd, 0xb9,
	0xbe, 0xdc, 0xd0, 0x79, 0x0e, 0x84, 0x39, 0x5c, 0x6a, 0xb8, 0x04, 0x09, 0xb6, 0xcd, 0xe3, 0x72,
	0x8d, 0xa4, 0xcc, 0xbf, 0x6d, 0xd5, 0xa9, 0x40, 0x93, 0xd0, 0x31, 0x85, 0x6d, 0x3a, 0x6b, 0xcf,
	0xb8, 0x28, 0x53, 0x37, 0xc9, 0xbe, 0x9b, 0xe4, 0x39, 0x1f, 0x93, 0x58, 0xe7, 0x0e, 0x15, 0xdb,
	0x04, 0xdd, 0x44, 0x9d, 0xd0, 0xd7, 0xe1, 0xf6, 0xbd, 0x4a, 0x4e, 0x01, 0x59, 0x76, 0x1a, 0xc4,
	0xbb, 0xd6, 0x2c, 0x62, 0x06, 0x46, 0xfc, 0x86, 0x83, 0x6d, 0xd3, 0x15, 0x5c, 0x22, 0x59, 0x66,
	0x9c, 0xc4, 0x4b, 0xa4, 0x9c, 0x66, 0x46, 0xd9, 0xa9, 0x40, 0x7b, 0x41, 0x38, 0x35, 0x7b, 0x32,
	0xc5, 0x77, 0x42, 0xcd, 0x2c, 0x07, 0x46, 0x76, 0xbc, 0x0d, 0x23, 0xb7, 0x5d, 0xb8, 0x91, 0x2f,
	0x70, 0xb0, 0xfd, 0xb8, 0x51, 0xa9, 0x10, 0xdd, 0xbe, 0xb4, 0xd1, 0xba, 0x05, 0xba, 0xef, 0xc4,
	0xa6, 0x89, 0x6d, 0x6d, 0x95, 0xa0, 0xe1, 0xc8, 0x43, 0x8a, 0x41, 0xdd, 0xba, 0x5f, 0x19, 0xdd,
	0xb1, 0x5d, 0xf7, 0xae, 0x10, 0x93, 0x38, 0xdb, 0xf6, 0x46, 0xe8, 0x3a, 0x69, 0x14, 0xdd, 0x33,
	0xea, 0xf6, 0xee, 0x19, 0xdf, 0x25, 0xbb, 0xc7, 0x4c, 0xf6, 0x8b, 0xe3, 0xc7, 0xa5, 0xec, 0x95,
	0x06, 0x3e, 0xe0, 0xdf, 0x86, 0x0f, 0x84, 0x0b, 0xf7, 0xc1, 0x2f, 0x39, 0xe8, 0x3d, 0x6e, 0x12,
	0x6c, 0x3b, 0x56, 0xcc, 0x92, 0xf7, 0xd6, 0x88, 0x65, 0xa3, 0x23, 0xee, 0x51, 0xf4, 0xec, 0xe8,
	0x4b, 0x1d, 0x76, 0x0e, 0x97, 0xe2, 0x1b, 0xd3, 0xc6, 0x25, 0x74, 0x35, 0x74, 0x1e, 0xc3, 0xfa,
	0x23, 0xd3, 0x53, 0x29, 0x90, 0x6f, 0x77, 0xc8, 0x67, 0x51, 0x53, 0xd1, 0x21, 0xe8, 0x56, 0x8a,
	0x45, 0xa3, 0xa6, 0xdb, 0xd3, 0x53, 0x29, 0x3b, 0x1c, 0x30, 0xad, 0x74, 0x9a, 0x8e, 0xc1, 0x8e,
	0xb9, 0x70, 0xee, 0xe9, 0x29, 0x17, 0xec, 0x78, 0xf3, 0x9d, 0x91, 0xc5, 0x2d, 0x6a, 0x6a, 0xcc,
	0xae, 0x53, 0x55, 0xf5, 0x1d, 0x67, 0xd7, 0xf3, 0x1c, 0xf4, 0x4e, 0x91, 0x32, 0x89, 0xd9, 0xd5,
	0xcf, 0x38, 0x85, 0xed, 0xb6, 0xf8, 0xe7, 0x38, 0xd8, 0x71, 0x1b, 0xb1, 0x2f, 0xc1, 0x95, 0x7f,
	0x9a, 0x83, 0x9d, 0x74, 0xe5, 0x96, 0xbf, 0xf4, 0x70, 0x75, 0xdc, 0x26, 0x57, 0xc7, 0x37, 0xb7,
	0x3a, 0x61, 0xd3, 0xab, 0x7b, 0x89, 0x83, 0x5d, 0xc1, 0xea, 0xac, 0xaa, 0xa1, 0x5b, 0x04, 0x1d,
	0x85, 0x0e, 0xe7, 0xb9, 0x8f, 0x93, 0x84, 0x4d, 0x6f, 0xf6, 0x0e, 0x1b, 0x97, 0xac, 0x76, 0x72,
	0xfb, 0x2b, 0x1c, 0x20, 0xca, 0x4e, 0x6e, 0x54, 0xf5, 0x5d, 0x7f, 0xb3, 0x17, 0x65, 0xbd, 0x93,
	0x2c, 0xa6, 0x1a, 0xe7, 0xb6, 0x88, 0x47, 0x1d, 0xcd, 0x0d, 0xcd, 0x6d, 0x66, 0x1f, 0x65, 0xa9,
	0x77, 0xa6, 0x7d, 0x3f, 0xe0, 0x00, 0x51, 0xb6, 0x8a, 0xd9, 0x37, 0xc0, 0x38, 0xf5, 0xed, 0x67,
	0xc0, 0xf7, 0xe8, 0xc9, 0xba, 0x44, 0x57, 0xff, 0x59, 0x0e, 0x7a, 0xfd, 0xd5, 0xb7, 0x23, 0x6f,
	0xbd, 0xca, 0xc1, 0xe5, 0x91, 0xf5, 0x79, 0xcc, 0xf5, 0xff, 0xd0, 0x49, 0x4b, 0x3c, 0xee, 0xda,
	0xec, 0xf6, 0xef, 0x74, 0xfd, 0xdf, 0x56, 0xfc, 0xf5, 0x3b, 0x0e, 0xf6, 0x50, 0xfe, 0xf2, 0x04,
	0xb3, 0x0f, 0xc2, 0xb1, 0x40, 0x42, 0x7b, 0x67, 0x7c, 0x6f, 0xaa, 0x91, 0x5e, 0x9b, 0xb8, 0x09,
	0x45, 0x4f, 0x7b, 0xb7, 0x99, 0x9d, 0x94, 0xc7, 0xde, 0xd9, 0x76, 0x9e, 0xe7, 0x60, 0x0f, 0xe5,
	0xb3, 0x84, 0x9d, 0x83, 0x0c, 0x4e, 0x68, 0x47, 0x23, 0x7e, 0x48, 0x4f, 0xdd, 0x25, 0x6c, 0xc1,
	0xb3, 0x1c, 0xa0, 0xd0, 0x82, 0x76, 0x64, 0xb6, 0xd7, 0x38, 0xd8, 0x1d, 0x5b, 0xa1, 0xc7, 0x6d,
	0x53, 0xd0, 0xe5, 0x97, 0x79, 0xec, 0xb6, 0xf9, 0x03, 0xd1, 0xe5, 0x21, 0xd1, 0x56, 0x0c, 0xf7,
	0x67, 0x0e, 0xae, 0xa4, 0x0c, 0x17, 0xbc, 0x3d, 0xfb, 0x70, 0xdc, 0x9e, 0x7c, 0xa3, 0xee, 0x19,
	0xdf, 0x97, 0x6a, 0x6c, 0xd0, 0x8a, 0xf1, 0xc6, 0xdd, 0x6e, 0xf6, 0x52, 0xa6, 0x7b, 0x77, 0xd8,
	0xfb, 0x02, 0x07, 0x57, 0x52, 0xc6, 0xdb, 0x60, 0xef, 0x7e, 0x06, 0x63, 0xb4, 0xa7, 0x21, 0x3f,
	0xa2, 0x27, 0xf2, 0x12, 0xb7, 0xe2, 0x0b, 0x1c, 0xec, 0x89, 0x5a, 0xd1, 0x8e, 0xdc, 0xf7, 0x26,
	0x07, 0x57, 0x24, 0xd6, 0xe8, 0xb1, 0x5f, 0x01, 0x20, 0x2c, 0xf5, 0xf8, 0xaf, 0x99, 0x23, 0x02,
	0x01, 0x26, 0x6d, 0xc5, 0x81, 0x7f, 0xe4, 0xe0, 0x0a, 0xca, 0x81, 0xfe, 0xe7, 0x40, 0x1f, 0x95,
	0x5b, 0xc3, 0x2f, 0x84, 0x1e, 0x23, 0x0c, 0xa4, 0x9a, 0xeb, 0x37, 0x8a, 0xef, 0xc0, 0x35, 0xa7,
	0x74, 0xb1, 0xcd, 0xbe, 0x84, 0x38, 0xc6, 0x52, 0x02, 0x7c, 0x17, 0x18, 0xfb, 0x63, 0x0e, 0xae,
	0xa0, 0xec, 0x97, 0x34, 0x96, 0x49, 0x1b, 0x6d, 0x69, 0xc7, 0x79, 0x2a, 0x98, 0x2e, 0x6d, 0x23,
	0x3e, 0x4f, 0x19, 0xdc, 0x37, 0xa2, 0x1d, 0xa9, 0xef, 0x4f, 0x94, 0x9e, 0x23, 0x4b, 0xf4, 0x98,
	0xef, 0x76, 0xe8, 0x0e, 0x0a, 0x3d, 0xe2, 0x6b, 0xe2, 0x70, 0x40, 0x80, 0x47, 0x3b, 0xf1, 0xde,
	0xf8, 0x4b, 0x33, 0x20, 0x46, 0xfa, 0xde, 0xe1, 0xd9, 0x70, 0x0f, 0x31, 0x57, 0xb5, 0x22, 0x41,
	0x6f, 0xf0, 0xd0, 0x1d, 0xa4, 0x16, 0xd0, 0xff, 0xa5, 0xeb, 0xdc, 0x44, 0xea, 0x41, 0x64, 0x7e,
	0xa8, 0x1c, 0x7a, 0x86, 0xaf, 0x2b, 0xdf, 0xe0, 0x60, 0x4f, 0x64, 0x46, 0xc9, 0x9f, 0x12, 0x5d,
	0x46, 0x07, 0x92, 0xb0, 0x64, 0xe3, 0x92, 0x78, 0x88, 0x3e, 0x59, 0x12, 0x96, 0x74, 0xb2, 0xe6,
	0x14, 0x49, 0x58, 0x57, 0x25, 0x93, 0xd8, 0x35, 0x53, 0xb7, 0x24, 0x7b, 0x85, 0x48, 0xc6, 0xd2,
	0xc3, 0xa4, 0x68, 0xcb, 0x85, 0x93, 0x20, 0x8c, 0x8f, 0x8e, 0xa1, 0x13, 0x70, 0xd5, 0x1c, 0x2e,
	0x49, 0x45, 0xb7, 0x9f, 0x2a, 0x59, 0xb5, 0x62, 0x91, 0x58, 0xd6, 0x72, 0xad, 0x5c, 0x5e, 0x97,
	0xd1, 0x30, 0x1c, 0x10, 0xaf, 0xb9, 0x3a, 0xaf, 0x92, 0x65, 0x4d, 0xd7, 0x68, 0x46, 0x36, 0x65,
	0x91, 0x73, 0xb8, 0xb4, 0xb4, 0x1b, 0x2e, 0x87, 0xce, 0xbb, 0x94, 0x9a, 0xbd, 0x32, 0x8e, 0xb6,
	0xc3, 0xb6, 0x35, 0x53, 0xb3, 0xc9, 0xe3, 0xbf, 0xf8, 0xed, 0xd3, 0xfc, 0xbd, 0x93, 0xdc, 0xc8,
	0xd0, 0x6c, 0x7e, 0x75, 0x2c, 0xef, 0x40, 0x64, 0xe5, 0xcf, 0x50, 0x0c, 0xcf, 0xe6, 0x3d, 0x24,
	0xac, 0xfc, 0x99, 0x00, 0xb0, 0xb3, 0xd1, 0xd1, 0xad, 0xfc, 0x99, 0x18, 0x3c, 0x67, 0xf3, 0x41,
	0x3e, 0xda, 0xd9, 0x0e, 0xe7, 0xf8, 0xdc, 0x53, 0xbc, 0x8b, 0x13, 0xfa, 0x8e, 0x00, 0x9d, 0xf4,
	0x23, 0x30, 0x1a, 0x4a, 0x75, 0x62, 0xec, 0xcb, 0x7b, 0x03, 0x47, 0xbf, 0xce, 0xd7, 0x95, 0xc7,
	0x79, 0x86, 0xa3, 0xfb, 0x66, 0x89, 0x6d, 0x6a, 0x64, 0x95, 0xb8, 0x5e, 0xd5, 0xf4, 0x65, 0xc3,
	0xac, 0xb8, 0x89, 0x2c, 0xf1, 0x48, 0x50, 0x13, 0x29, 0x95, 0xf0, 0x92, 0x51, 0xb3, 0x5d, 0x8f,
	0x3b, 0xed, 0xad, 0x2a, 0x29, 0x6a, 0xcb, 0x1a, 0x51, 0xa5, 0xa5, 0x75, 0xb7, 0x70, 0x7a, 0xaa,
	0x70, 0xb7, 0x83, 0xc0, 0x28, 0x2a, 0xc0, 0x3e, 0x6f, 0x69, 0x12, 0x79, 0x94, 0x14, 0x6b, 0x6f,
	0x03, 0x86, 0xc2, 0x18, 0x08, 0x13, 0xa3, 0x13, 0x68, 0x04, 0x86, 0x67, 0x5d, 0xc8, 0x89, 0x2a,
	0xad, 0xad, 0x10, 0xdd, 0x9d, 0xd1, 0x24, 0x96, 0x51, 0x33, 0x8b, 0x44, 0xd2, 0x2c, 0x49, 0x37,
	0x6c, 0x69, 0xd9, 0xa8, 0xe9, 0xaa, 0xbc, 0x84, 0xa0, 0x37, 0x40, 0xae, 0x13, 0x3a, 0x4c, 0x82,
	0x55, 0x0a, 0x1c, 0x3a, 0xe5, 0x66, 0xcc, 0x71, 0xa9, 0x65, 0xa0, 0xe5, 0xcf, 0x4c, 0x4f, 0x9d,
	0x8d, 0x00, 0xf7, 0x73, 0x01, 0xb6, 0x7b, 0x5f, 0xef, 0xd1, 0xd5, 0x0d, 0x90, 0xf3, 0x09, 0x4f,
	0xbc, 0xa6, 0x71, 0x23, 0x4a, 0x39, 0x43, 0x7f, 0xe5, 0xeb, 0xca, 0xc7, 0x59, 0x30, 0xf6, 0x07,
	0x60, 0xe1, 0x72, 0x59, 0xc2, 0xab, 0x58, 0x2b, 0xe3, 0xa5, 0xb2, 0x0b, 0x92, 0x25, 0x8e, 0xa7,
	0x22, 0x69, 0x92, 0x12, 0x36, 0x55, 0x4d, 0x2f, 0xa5, 0x74, 0x91, 0x0b, 0x0f, 0x52, 0x14, 0xe7,
	0x33, 0x51, 0x9c, 0x80, 0x71, 0x71, 0x34, 0x13, 0xc5, 0x84, 0x31, 0xad, 0x44, 0x74, 0x0e, 0x6d,
	0xed, 0x39, 0x7c, 0x95, 0x87, 0xee, 0x20, 0xf3, 0xc8, 0xa0, 0xbd, 0x64, 0x66, 0xb2, 0xc1, 0x69,
	0xfc, 0x28, 0x5f, 0x57, 0xbe, 0xc4, 0xa4, 0x3d, 0x3a, 0x90, 0x47, 0x7b, 0xfd, 0xf4, 0xc9, 0xa2,
	0x8f, 0x07, 0xad, 0x28, 0x7c, 0x94, 0xe8, 0x26, 0x7c, 0xa2, 0x8b, 0x62, 0x22, 0xd5, 0xdc, 0x6e,
	0x6a, 0xcb, 0x88, 0x4e, 0xdc, 0x5a, 0x07, 0x7f, 0x9d, 0x87, 0xee, 0x20, 0x05, 0xca, 0x70, 0x70,
	0x32, 0x45, 0x2a, 0x5e, 0xb9, 0x21, 0xb1, 0x7e, 0xa2, 0x52, 0xb5, 0xd7, 0x87, 0x7e, 0xcd, 0xd5,
	0x95, 0x47, 0x59, 0xde, 0xa5, 0xa3, 0x78, 0xde, 0xbd, 0x6a, 0x86, 0x98, 0x15, 0xac, 0x13, 0xdd,
	0x2e, 0xaf, 0x4b, 0x6a, 0xa4, 0x46, 0x2e, 0x0c, 0x51, 0xdf, 0xf6, 0xa7, 0xf8, 0x96, 0x36, 0x54,
	0x65, 0xb6, 0xc7, 0x16, 0x46, 0xe6, 0x5b, 0xee, 0xae, 0x18, 0xc5, 0xa0, 0xff, 0xf0, 0xd0, 0x13,
	0xc9, 0xa2, 0xa1, 0x83, 0x0d, 0x42, 0x71, 0x34, 0xd3, 0x21, 0x36, 0xf8, 0xf2, 0x3e, 0xf4, 0x45,
	0xbe, 0xae, 0x3c, 0xcf, 0xda, 0x97, 0x3b, 0x83, 0x70, 0xec, 0x7e, 0x93, 0x17, 0xaf, 0x8d, 0x07,
	0x64, 0xb7, 0x90, 0x19, 0x92, 0x67, 0x68, 0x48, 0x9e, 0x86, 0x7e, 0x77, 0x26, 0x46, 0x50, 0x1e,
	0x81, 0x61, 0xf1, 0x40, 0xe6, 0x5e, 0x75, 0x47, 0x60, 0xfb, 0xfe, 0x3e, 0x27, 0x2c, 0xcf, 0xb5,
	0xd6, 0xfd, 0x34, 0x0b, 0x11, 0xd9, 0xaf, 0x2f, 0x08, 0xd0, 0xe5, 0x67, 0x39, 0x10, 0x93, 0xbb,
	0x37, 0xed, 0xf8, 0xbf, 0xf3, 0x75, 0xe5, 0x1c, 0x8b, 0xd7, 0xc5, 0x90, 0xba, 0x5d, 0xdf, 0x45,
	0x03, 0xf4, 0xd1, 0x8c, 0x00, 0x4d, 0x7b, 0xa4, 0x85, 0xe8, 0x7b, 0x28, 0xb9, 0x9f, 0xcc, 0x24,
	0xf7, 0x26, 0x40, 0x69, 0x25, 0xa5, 0xdf, 0x8f, 0xee, 0x73, 0x30, 0xa4, 0x9e, 0x6f, 0x1d, 0x88,
	0xc9, 0x40, 0xfd, 0x2b, 0x01, 0xba, 0x83, 0x74, 0x15, 0x83, 0x78, 0x92, 0xe9, 0x36, 0xf1, 0x40,
	0x56, 0x33, 0x2f, 0x5c, 0xff, 0x9b, 0xaf, 0x2b, 0x4f, 0xb3, 0x60, 0x1d, 0x60, 0x84, 0x6b, 0x6a,
	0xb1, 0x38, 0xd1, 0x54, 0xc0, 0xa6, 0x9d, 0xe4, 0x0b, 0x00, 0xa0, 0xb0, 0x48, 0x37, 0xc2, 0x42,
	0xe6, 0x46, 0x38, 0x02, 0x13, 0xe2, 0xf8, 0x66, 0xa2, 0x7c, 0xdc, 0x0b, 0x4c, 0x84, 0xe7, 0xd1,
	0x56, 0x9f, 0xd2, 0x37, 0x79, 0xe8, 0x89, 0xa4, 0xe2, 0x19, 0x24, 0xb9, 0x31, 0x59, 0xdf, 0xf0,
	0xac, 0x7e, 0x92, 0xaf, 0x2b, 0x5f, 0x65, 0x92, 0x64, 0x10, 0xbc, 0x29, 0x49, 0x0e, 0x84, 0xe1,
	0xdb, 0x2d, 0x48, 0x04, 0xf0, 0x19, 0x1a, 0x64, 0x02, 0x5a, 0x4c, 0x0f, 0xe1, 0x2d, 0xa3, 0x45,
	0x71, 0xab, 0x1d, 0xfe, 0x3c, 0x0f, 0x3d, 0x91, 0xbb, 0x01, 0x0c, 0x87, 0x6f, 0xbc, 0x3d, 0xc0,
	0x0c, 0xe5, 0xbf, 0xe7, 0xea, 0xca, 0xfb, 0x59, 0xbe, 0x0e, 0x42, 0x39, 0xf5, 0x75, 0x7f, 0x6a,
	0x30, 0x77, 0xeb, 0xe4, 0xc2, 0x35, 0xd4, 0xd3, 0x03, 0xa9, 0x9e, 0xce, 0x0e, 0xe8, 0xa7, 0x47,
	0x16, 0xb6, 0xc0, 0x75, 0xf1, 0x90, 0xfe, 0x31, 0x01, 0x76, 0xc4, 0x12, 0xcb, 0xe8, 0x50, 0x83,
	0xa0, 0x1e, 0x4f, 0xf5, 0x89, 0x0d, 0x53, 0x4e, 0x43, 0x5f, 0xe3, 0xeb, 0xca, 0x79, 0xd6, 0x9e,
	0xed, 0x0d, 0x02, 0xbb, 0x97, 0x8c, 0x12, 0x0f, 0xc7, 0x43, 0xbb, 0x57, 0xcc, 0x0c, 0xee, 0x73,
	0x34, 0xb8, 0xdf, 0x01, 0x03, 0xde, 0x7c, 0x8c, 0xf0, 0x7e, 0x1d, 0x8c, 0x88, 0xc3, 0x99, 0xfb,
	0xd8, 0x1b, 0x83, 0x8d, 0xc5, 0xfd, 0x4e, 0x80, 0x6f, 0xb1, 0xbe, 0xf2, 0xd3, 0x70, 0x91, 0xbd,
	0xfc, 0x92, 0x00, 0x10, 0xa6, 0xfb, 0x10, 0x93, 0xf3, 0x9b, 0x02, 0xe2, 0x2d, 0xbe, 0xae, 0x3c,
	0xc9, 0x8a, 0x08, 0x7b, 0x03, 0xca, 0xf7, 0x3d, 0x1e, 0x0d, 0xf5, 0x93, 0x19, 0xa1, 0xde, 0xef,
	0x93, 0x16, 0xec, 0x4f, 0x51, 0x8e, 0xbf, 0x33, 0x93, 0xe3, 0x9b, 0x82, 0xa8, 0x95, 0xe1, 0x7e,
	0x11, 0x3d, 0xe8, 0x20, 0xea, 0xe3, 0xd0, 0x4a, 0x50, 0x93, 0x21, 0xff, 0x0f, 0x02, 0xf4, 0x44,
	0xf2, 0xb8, 0x0c, 0x92, 0xda, 0x98, 0x8b, 0x16, 0x87, 0xb3, 0x1b, 0x7a, 0x81, 0xff, 0x31, 0xa1,
	0xae, 0x3c, 0xc3, 0x82, 0x79, 0x90, 0x11, 0xf8, 0x7d, 0xdb, 0x19, 0x5f, 0x5d, 0x58, 0xa1, 0xdf,
	0xef, 0x76, 0x41, 0xc1, 0x1f, 0xd3, 0x8d, 0x71, 0x3a, 0x73, 0x63, 0x1c, 0x85, 0x23, 0xe2, 0xc4,
	0x66, 0x82, 0x7f, 0xd2, 0x17, 0x4c, 0xc4, 0x17, 0xd0, 0xd6, 0x9f, 0xe1, 0xff, 0xf2, 0xb0, 0x23,
	0x76, 0x87, 0x85, 0x41, 0xa9, 0x69, 0xf7, 0x5c, 0x32, 0x4e, 0xf2, 0xb3, 0x7c, 0x5d, 0xf9, 0x16,
	0x93, 0x52, 0x03, 0x19, 0xe0, 0x53, 0xea, 0x60, 0x28, 0x04, 0xbc, 0xa2, 0x84, 0x14, 0x98, 0xa3,
	0x01, 0x2a, 0x42, 0xa2, 0xe9, 0x62, 0xa0, 0x85, 0x24, 0x2a, 0x6e, 0x3d, 0x00, 0x3f, 0xe1, 0x61,
	0x47, 0xec, 0x72, 0x0d, 0x03, 0x80, 0xb4, 0x0b, 0x38, 0x4c, 0x51, 0xf0, 0x17, 0xae, 0xae, 0x7c,
	0x90, 0xe9, 0xfa, 0x40, 0x15, 0xf8, 0xae, 0x1f, 0x48, 0xd5, 0x05, 0x5e, 0xad, 0x5c, 0x38, 0x40,
	0x1d, 0x3f, 0xc8, 0x70, 0x7c, 0xb6, 0x36, 0x78, 0x60, 0xe4, 0xf4, 0x96, 0xf8, 0x31, 0xae, 0x0e,
	0x3e, 0x23, 0xc0, 0xae, 0xc4, 0xa5, 0x0c, 0x74, 0x6d, 0x03, 0x7d, 0x90, 0x4c, 0x8a, 0x8b, 0x19,
	0x49, 0xd9, 0xa1, 0xe7, 0xf8, 0xba, 0xf2, 0x33, 0x96, 0x57, 0x51, 0xa0, 0x11, 0x82, 0x74, 0xad,
	0x98, 0x8f, 0xab, 0x84, 0xa0, 0x82, 0xa9, 0x13, 0x16, 0xa8, 0x4e, 0xb8, 0x1b, 0x06, 0x83, 0x59,
	0x19, 0x4a, 0x41, 0x86, 0xeb, 0xc4, 0x91, 0xcc, 0x4d, 0x1e, 0x8c, 0xc2, 0xc6, 0xe6, 0x41, 0x47,
	0x2b, 0xb4, 0x58, 0xba, 0x85, 0x09, 0xeb, 0xc8, 0x46, 0x7f, 0x4d, 0x80, 0xcb, 0xa2, 0x09, 0x72,
	0xc4, 0x0c, 0x16, 0x4d, 0x03, 0xf3, 0x61, 0xa1, 0xae, 0x7c, 0x82, 0x15, 0x4c, 0xf6, 0x05, 0xb1,
	0x22, 0xf4, 0x7f, 0x54, 0x35, 0xdc, 0x9c, 0xa1, 0x1a, 0xc2, 0x5e, 0x69, 0xba, 0xe1, 0x5e, 0x1a,
	0x1e, 0x66, 0x32, 0xc3, 0x43, 0x93, 0x80, 0xb5, 0x52, 0x39, 0x14, 0x11, 0x76, 0xf0, 0x0d, 0x51,
	0x69, 0x2d, 0xc8, 0x49, 0xf5, 0xf0, 0x0f, 0xc1, 0xfd, 0x7b, 0x87, 0xf0, 0xce, 0x03, 0x83, 0xd1,
	0xd2, 0x6e, 0x74, 0x88, 0x23, 0x9b, 0x69, 0xea, 0x69, 0x88, 0x27, 0x84, 0xba, 0xf2, 0x2c, 0x0b,
	0xf6, 0xfd, 0x0c, 0x0d, 0x11, 0x7a, 0x81, 0xf1, 0x69, 0x88, 0xa5, 0x22, 0xc2, 0x8e, 0x72, 0xa1,
	0x48, 0x51, 0x7f, 0x20, 0x13, 0xf5, 0x49, 0x38, 0x2a, 0x1e, 0xd9, 0x8c, 0x28, 0xd8, 0x68, 0x5e,
	0x2b, 0x77, 0xc0, 0x69, 0x74, 0x31, 0x4e, 0xf8, 0x93, 0x02, 0xec, 0x4a, 0xdc, 0x12, 0x63, 0x10,
	0x70, 0xfa, 0x5d, 0xb2, 0xcc, 0x73, 0xfe, 0x15, 0xbe, 0xae, 0x7c, 0x9f, 0x49, 0xc0, 0x81, 0xa2,
	0x08, 0x09, 0x78, 0x7f, 0xa8, 0x29, 0x82, 0xc2, 0x84, 0xaa, 0x58, 0xa0, 0xc1, 0x2d, 0x46, 0xb9,
	0xe9, 0xba, 0xa2, 0xa5, 0x94, 0x2b, 0x5e, 0x0c, 0x40, 0x5e, 0xe6, 0x61, 0x57, 0xe2, 0x1a, 0x1b,
	0x03, 0x90, 0xf4, 0xcb, 0x6e, 0x4c, 0x7d, 0xf1, 0x16, 0x57, 0x57, 0x3e, 0xc2, 0x04, 0x22, 0xd0,
	0x17, 0x21, 0x10, 0x83, 0xa9, 0x0a, 0x23, 0xa8, 0x97, 0x0b, 0xc3, 0x14, 0x86, 0xfd, 0x4c, 0x18,
	0xb2, 0x55, 0x46, 0x71, 0xe4, 0xe2, 0xd1, 0x1c, 0xfa, 0x94, 0x00, 0x3b, 0xe3, 0xb7, 0x9f, 0xd0,
	0x48, 0x03, 0xad, 0x91, 0xb8, 0x83, 0x22, 0x36, 0xbe, 0x06, 0x31, 0xf4, 0x6d, 0xbe, 0xae, 0xfc,
	0x34, 0x5b, 0x69, 0xb8, 0x17, 0x24, 0xdc, 0x34, 0x4d, 0x42, 0x69, 0x04, 0x15, 0x4c, 0xa5, 0x31,
	0x4f, 0x95, 0xc6, 0x5d, 0xb0, 0xcf, 0x9f, 0x94, 0x21, 0x34, 0x0e, 0xc3, 0xb5, 0xe2, 0xa1, 0xcc,
	0x5d, 0xef, 0x0f, 0x72, 0x71, 0x75, 0x46, 0x78, 0x41, 0x24, 0xb2, 0xe9, 0x5f, 0xa1, 0x2f, 0xaf,
	0x01, 0x2c, 0xcc, 0x97, 0xd7, 0x26, 0x31, 0x71, 0xde, 0x58, 0x9f, 0xce, 0x16, 0x19, 0xa1, 0xeb,
	0x9b, 0x11, 0x19, 0x61, 0xaf, 0x34, 0x91, 0x31, 0x4f, 0xc3, 0xcd, 0x5d, 0x99, 0xe1, 0xa6, 0x39,
	0xb0, 0x5a, 0x19, 0x61, 0x1e, 0x42, 0x0f, 0x6c, 0x11, 0xb6, 0x49, 0x79, 0xf1, 0x37, 0xaa, 0x23,
	0x83, 0x8b, 0x45, 0x6c, 0x1d, 0x99, 0xbc, 0x33, 0x25, 0x1e, 0xda, 0x44, 0x4b, 0x4f, 0x5b, 0x9c,
	0x13, 0xea, 0xca, 0xe7, 0x9a, 0xd5, 0x16, 0x01, 0x8a, 0xcd, 0x6a, 0x8b, 0xb0, 0xa3, 0x5c, 0x58,
	0xa2, 0x60, 0xdf, 0x9f, 0x09, 0xf6, 0x4d, 0x70, 0xa3, 0x78, 0xc3, 0x66, 0xb4, 0xc5, 0x06, 0xeb,
	0xda, 0x5a, 0x5a, 0xa4, 0x1e, 0xea, 0x27, 0x04, 0xd8, 0x19, 0xbf, 0x7f, 0xc9, 0xa0, 0xdb, 0xd4,
	0x4b, 0x9a, 0x59, 0x47, 0xfb, 0xcb, 0x8d, 0xb2, 0xba, 0xa1, 0xae, 0x08, 0xe9, 0x36, 0xa2, 0x2b,
	0x82, 0xc2, 0x84, 0xae, 0x98, 0xa7, 0x01, 0x2d, 0x4a, 0xb0, 0xe9, 0xb2, 0xa2, 0x95, 0x04, 0x2b,
	0x5e, 0x0c, 0x2c, 0x5e, 0xe4, 0x61, 0x67, 0xfc, 0x7a, 0x28, 0x03, 0x8b, 0xd4, 0x3b, 0xa4, 0x4c,
	0x4d, 0xf1, 0x4f, 0xae, 0xae, 0x3c, 0x91, 0xad, 0x29, 0x42, 0x10, 0xd2, 0x35, 0x45, 0x50, 0x2f,
	0x17, 0x0e, 0x52, 0x08, 0x24, 0x16, 0x04, 0xd9, 0x92, 0xe2, 0xa1, 0x91, 0x8b, 0xc2, 0x6a, 0xa2,
	0x70, 0x8e, 0xcf, 0x1d, 0xfb, 0x66, 0x67, 0x5d, 0x79, 0xac, 0x13, 0x84, 0x71, 0x79, 0x14, 0xad,
	0x40, 0x5f, 0x9a, 0x1f, 0x24, 0x65, 0x66, 0x1a, 0x9d, 0xf0, 0x7e, 0x90, 0x84, 0x06, 0x74, 0xec,
	0x1a, 0xe4, 0xc6, 0x79, 0x8f, 0x4f, 0xb4, 0xb2, 0x66, 0xaf, 0x4b, 0xb6, 0x41, 0xef, 0x9f, 0x45,
	0x46, 0xa9, 0x44, 0x46, 0x91, 0xc7, 0xb7, 0x8d, 0xc9, 0xa3, 0xf2, 0xe8, 0x08, 0xc7, 0x8f, 0xf7,
	0xe2, 0x6a, 0xb5, 0xac, 0xd1, 0x5f, 0x66, 0xc8, 0x3f, 0x6c, 0x19, 0xfa, 0xe4, 0x86, 0x92, 0xd9,
	0x19, 0x87, 0x31, 0xae, 0x47, 0xd3, 0x70, 0xdb, 0x46, 0xc6, 0xa8, 0x59, 0xc4, 0x94, 0x54, 0x83,
	0x50, 0xbe, 0x58, 0xc1, 0xab, 0x44, 0xaa, 0x12, 0xb3, 0xa2, 0x59, 0x96, 0x33, 0xab, 0x6d, 0xf8,
	0x6b, 0x8c, 0xb2, 0x8b, 0x3c, 0xdb, 0x3c, 0x07, 0xcd, 0xde, 0x0a, 0xc2, 0x0d, 0xa3, 0xa3, 0xe8,
	0x3d, 0x70, 0x4b, 0xbc, 0x0b, 0xd6, 0xa5, 0x9a, 0x4e, 0x1e, 0xad, 0x92, 0xa2, 0xc3, 0x92, 0xc4,
	0x34, 0x0d, 0x53, 0x32, 0x8a, 0xc5, 0x9a, 0x49, 0x54, 0xc9, 0xa0, 0x23, 0x5a, 0xc4, 0x5c, 0x25,
	0xa6, 0x64, 0x69, 0x2a, 0x91, 0x67, 0x17, 0x9d, 0xa9, 0x47, 0xd1, 0x02, 0xcc, 0xa7, 0x4d, 0x4d,
	0x49, 0x77, 0xc9, 0x50, 0xd7, 0x9d, 0xe9, 0x2b, 0xb8, 0x4c, 0x0f, 0xb5, 0x33, 0xb4, 0x11, 0xb1,
	0xb3, 0x82, 0xed, 0xe2, 0x8a, 0xdb, 0x25, 0x98, 0xd9, 0xeb, 0x2b, 0xcf, 0x9e, 0x74, 0x26, 0x18,
	0x43, 0x27, 0xe0, 0x38, 0x7b, 0x82, 0x60, 0xa0, 0xa2, 0xa1, 0xdb, 0x58, 0xf3, 0xf4, 0x99, 0xe3,
	0xcb, 0x83, 0x96, 0xa3, 0xc5, 0x54, 0xa2, 0xdb, 0x1a, 0x2e, 0x5b, 0xf2, 0xe9, 0x37, 0x38, 0x78,
	0x9d, 0x0b, 0x36, 0xe8, 0xab, 0x5c, 0x97, 0x80, 0x3e, 0xc4, 0x29, 0x9e, 0x4f, 0x8d, 0x28, 0xc4,
	0x56, 0xe0, 0x39, 0xcb, 0x59, 0xbb, 0x49, 0x2c, 0xdb, 0xd4, 0xdc, 0xa5, 0x39, 0x28, 0xd4, 0xec,
	0x15, 0x67, 0xcc, 0xa2, 0xab, 0xf2, 0x9c, 0x89, 0x2c, 0x59, 0x9a, 0x73, 0xb6, 0x50, 0x58, 0xe1,
	0x00, 0x56, 0x35, 0x0d, 0x77, 0xe8, 0x65, 0xa3, 0x5c, 0x36, 0xd6, 0xe8, 0xb2, 0x9c, 0xa9, 0x0d,
	0x53, 0x7b, 0x1f, 0x6d, 0x71, 0xdc, 0x50, 0x89, 0xb4, 0x5c, 0x36, 0xd6, 0xe4, 0xe1, 0x8e, 0xf1,
	0x2e, 0xe7, 0x84, 0x38, 0x43, 0x4c, 0x76, 0xbb, 0x77, 0x06, 0x8d, 0x47, 0x88, 0x7e, 0x6c, 0x12,
	0x44, 0x1a, 0x23, 0x10, 0xba, 0xcd, 0xc4, 0xba, 0xed, 0xac, 0x05, 0xab, 0xde, 0x46, 0x80, 0xbd,
	0xde, 0x19, 0x43, 0xbb, 0xbd, 0x4a, 0xf7, 0xc9, 0xab, 0xbd, 0x9d, 0x9b, 0xc9, 0x9d, 0x4e, 0xfb,
	0xad, 0xa1, 0x0f, 0x70, 0xb9, 0x73, 0x5c, 0xee, 0x29, 0x2e, 0xf7, 0x5d, 0x2e, 0xf7, 0x32, 0x97,
	0xfb, 0x17, 0x97, 0x7b, 0x91, 0xcf, 0x2d, 0x75, 0xba, 0x34, 0x72, 0xfd, 0xff, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x7d, 0xcb, 0x6f, 0x98, 0xdd, 0x48, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionMetadataServiceClient is the client API for TransactionMetadataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionMetadataServiceClient interface {
	// CreateTag creates a new tag and returns its tag response.
	CreateTag(ctx context.Context, in *CreateTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// GetTag retrieves a tag.
	GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// GetTags retrieves all tags.
	GetTags(ctx context.Context, in *GetTagsRequest, opts ...grpc.CallOption) (*GetTagsResponse, error)
	// UpdateTag updates the tag.
	UpdateTag(ctx context.Context, in *UpdateTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// DeleteTag deletes the tag.
	DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateImage creates a new image and returns its image response.
	CreateImage(ctx context.Context, in *CreateImageRequest, opts ...grpc.CallOption) (*Image, error)
	// GetImage retrieves a image.
	GetImage(ctx context.Context, in *GetImageRequest, opts ...grpc.CallOption) (*Image, error)
	// GetImages retrieves all images.
	GetImages(ctx context.Context, in *GetImagesRequest, opts ...grpc.CallOption) (*GetImagesResponse, error)
	// UpdateImage updates the image.
	UpdateImage(ctx context.Context, in *UpdateImageRequest, opts ...grpc.CallOption) (*Image, error)
	// DeleteImage deletes the image.
	DeleteImage(ctx context.Context, in *DeleteImageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateComment creates a new comment and returns its comment response.
	CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*Comment, error)
	// GetComment retrieves a comment.
	GetComment(ctx context.Context, in *GetCommentRequest, opts ...grpc.CallOption) (*Comment, error)
	// GetComments retrieves all comments.
	GetComments(ctx context.Context, in *GetCommentsRequest, opts ...grpc.CallOption) (*GetCommentsResponse, error)
	// UpdateComment updates the comment.
	UpdateComment(ctx context.Context, in *UpdateCommentRequest, opts ...grpc.CallOption) (*Comment, error)
	// DeleteComment deletes the comment.
	DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateNarrative creates a new narrative and returns its narrative response.
	CreateNarrative(ctx context.Context, in *CreateNarrativeRequest, opts ...grpc.CallOption) (*Narrative, error)
	// GetNarrative retrieves a narrative.
	GetNarrative(ctx context.Context, in *GetNarrativeRequest, opts ...grpc.CallOption) (*Narrative, error)
	// GetNarratives retrieves all narratives.
	GetNarratives(ctx context.Context, in *GetNarrativesRequest, opts ...grpc.CallOption) (*GetNarrativesResponse, error)
	// UpdateNarrative updates the narrative.
	UpdateNarrative(ctx context.Context, in *UpdateNarrativeRequest, opts ...grpc.CallOption) (*Narrative, error)
	// DeleteNarrative deletes the narrative.
	DeleteNarrative(ctx context.Context, in *DeleteNarrativeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateWhereTag creates a new where tag and returns its where tag response.
	CreateWhereTag(ctx context.Context, in *CreateWhereTagRequest, opts ...grpc.CallOption) (*WhereTag, error)
	// GetWhereTag retrieves a where tag.
	GetWhereTag(ctx context.Context, in *GetWhereTagRequest, opts ...grpc.CallOption) (*WhereTag, error)
	// GetWhereTags retrieves all where tags.
	GetWhereTags(ctx context.Context, in *GetWhereTagsRequest, opts ...grpc.CallOption) (*GetWhereTagsResponse, error)
	// UpdateWhereTag updates the where tag.
	UpdateWhereTag(ctx context.Context, in *UpdateWhereTagRequest, opts ...grpc.CallOption) (*WhereTag, error)
	// DeleteWhereTag deletes the where tag.
	DeleteWhereTag(ctx context.Context, in *DeleteWhereTagRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type transactionMetadataServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransactionMetadataServiceClient(cc *grpc.ClientConn) TransactionMetadataServiceClient {
	return &transactionMetadataServiceClient{cc}
}

func (c *transactionMetadataServiceClient) CreateTag(ctx context.Context, in *CreateTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/CreateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetTags(ctx context.Context, in *GetTagsRequest, opts ...grpc.CallOption) (*GetTagsResponse, error) {
	out := new(GetTagsResponse)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) UpdateTag(ctx context.Context, in *UpdateTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/UpdateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) CreateImage(ctx context.Context, in *CreateImageRequest, opts ...grpc.CallOption) (*Image, error) {
	out := new(Image)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/CreateImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetImage(ctx context.Context, in *GetImageRequest, opts ...grpc.CallOption) (*Image, error) {
	out := new(Image)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetImages(ctx context.Context, in *GetImagesRequest, opts ...grpc.CallOption) (*GetImagesResponse, error) {
	out := new(GetImagesResponse)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) UpdateImage(ctx context.Context, in *UpdateImageRequest, opts ...grpc.CallOption) (*Image, error) {
	out := new(Image)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/UpdateImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) DeleteImage(ctx context.Context, in *DeleteImageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/DeleteImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*Comment, error) {
	out := new(Comment)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/CreateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetComment(ctx context.Context, in *GetCommentRequest, opts ...grpc.CallOption) (*Comment, error) {
	out := new(Comment)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetComments(ctx context.Context, in *GetCommentsRequest, opts ...grpc.CallOption) (*GetCommentsResponse, error) {
	out := new(GetCommentsResponse)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) UpdateComment(ctx context.Context, in *UpdateCommentRequest, opts ...grpc.CallOption) (*Comment, error) {
	out := new(Comment)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/UpdateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) CreateNarrative(ctx context.Context, in *CreateNarrativeRequest, opts ...grpc.CallOption) (*Narrative, error) {
	out := new(Narrative)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/CreateNarrative", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetNarrative(ctx context.Context, in *GetNarrativeRequest, opts ...grpc.CallOption) (*Narrative, error) {
	out := new(Narrative)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetNarrative", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetNarratives(ctx context.Context, in *GetNarrativesRequest, opts ...grpc.CallOption) (*GetNarrativesResponse, error) {
	out := new(GetNarrativesResponse)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetNarratives", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) UpdateNarrative(ctx context.Context, in *UpdateNarrativeRequest, opts ...grpc.CallOption) (*Narrative, error) {
	out := new(Narrative)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/UpdateNarrative", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) DeleteNarrative(ctx context.Context, in *DeleteNarrativeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/DeleteNarrative", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) CreateWhereTag(ctx context.Context, in *CreateWhereTagRequest, opts ...grpc.CallOption) (*WhereTag, error) {
	out := new(WhereTag)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/CreateWhereTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetWhereTag(ctx context.Context, in *GetWhereTagRequest, opts ...grpc.CallOption) (*WhereTag, error) {
	out := new(WhereTag)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetWhereTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) GetWhereTags(ctx context.Context, in *GetWhereTagsRequest, opts ...grpc.CallOption) (*GetWhereTagsResponse, error) {
	out := new(GetWhereTagsResponse)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/GetWhereTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) UpdateWhereTag(ctx context.Context, in *UpdateWhereTagRequest, opts ...grpc.CallOption) (*WhereTag, error) {
	out := new(WhereTag)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/UpdateWhereTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionMetadataServiceClient) DeleteWhereTag(ctx context.Context, in *DeleteWhereTagRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/transactionmetadata.TransactionMetadataService/DeleteWhereTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionMetadataServiceServer is the server API for TransactionMetadataService service.
type TransactionMetadataServiceServer interface {
	// CreateTag creates a new tag and returns its tag response.
	CreateTag(context.Context, *CreateTagRequest) (*Tag, error)
	// GetTag retrieves a tag.
	GetTag(context.Context, *GetTagRequest) (*Tag, error)
	// GetTags retrieves all tags.
	GetTags(context.Context, *GetTagsRequest) (*GetTagsResponse, error)
	// UpdateTag updates the tag.
	UpdateTag(context.Context, *UpdateTagRequest) (*Tag, error)
	// DeleteTag deletes the tag.
	DeleteTag(context.Context, *DeleteTagRequest) (*empty.Empty, error)
	// CreateImage creates a new image and returns its image response.
	CreateImage(context.Context, *CreateImageRequest) (*Image, error)
	// GetImage retrieves a image.
	GetImage(context.Context, *GetImageRequest) (*Image, error)
	// GetImages retrieves all images.
	GetImages(context.Context, *GetImagesRequest) (*GetImagesResponse, error)
	// UpdateImage updates the image.
	UpdateImage(context.Context, *UpdateImageRequest) (*Image, error)
	// DeleteImage deletes the image.
	DeleteImage(context.Context, *DeleteImageRequest) (*empty.Empty, error)
	// CreateComment creates a new comment and returns its comment response.
	CreateComment(context.Context, *CreateCommentRequest) (*Comment, error)
	// GetComment retrieves a comment.
	GetComment(context.Context, *GetCommentRequest) (*Comment, error)
	// GetComments retrieves all comments.
	GetComments(context.Context, *GetCommentsRequest) (*GetCommentsResponse, error)
	// UpdateComment updates the comment.
	UpdateComment(context.Context, *UpdateCommentRequest) (*Comment, error)
	// DeleteComment deletes the comment.
	DeleteComment(context.Context, *DeleteCommentRequest) (*empty.Empty, error)
	// CreateNarrative creates a new narrative and returns its narrative response.
	CreateNarrative(context.Context, *CreateNarrativeRequest) (*Narrative, error)
	// GetNarrative retrieves a narrative.
	GetNarrative(context.Context, *GetNarrativeRequest) (*Narrative, error)
	// GetNarratives retrieves all narratives.
	GetNarratives(context.Context, *GetNarrativesRequest) (*GetNarrativesResponse, error)
	// UpdateNarrative updates the narrative.
	UpdateNarrative(context.Context, *UpdateNarrativeRequest) (*Narrative, error)
	// DeleteNarrative deletes the narrative.
	DeleteNarrative(context.Context, *DeleteNarrativeRequest) (*empty.Empty, error)
	// CreateWhereTag creates a new where tag and returns its where tag response.
	CreateWhereTag(context.Context, *CreateWhereTagRequest) (*WhereTag, error)
	// GetWhereTag retrieves a where tag.
	GetWhereTag(context.Context, *GetWhereTagRequest) (*WhereTag, error)
	// GetWhereTags retrieves all where tags.
	GetWhereTags(context.Context, *GetWhereTagsRequest) (*GetWhereTagsResponse, error)
	// UpdateWhereTag updates the where tag.
	UpdateWhereTag(context.Context, *UpdateWhereTagRequest) (*WhereTag, error)
	// DeleteWhereTag deletes the where tag.
	DeleteWhereTag(context.Context, *DeleteWhereTagRequest) (*empty.Empty, error)
}

// UnimplementedTransactionMetadataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionMetadataServiceServer struct {
}

func (*UnimplementedTransactionMetadataServiceServer) CreateTag(ctx context.Context, req *CreateTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTag not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetTag(ctx context.Context, req *GetTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTag not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetTags(ctx context.Context, req *GetTagsRequest) (*GetTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTags not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) UpdateTag(ctx context.Context, req *UpdateTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTag not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) DeleteTag(ctx context.Context, req *DeleteTagRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTag not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) CreateImage(ctx context.Context, req *CreateImageRequest) (*Image, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateImage not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetImage(ctx context.Context, req *GetImageRequest) (*Image, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImage not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetImages(ctx context.Context, req *GetImagesRequest) (*GetImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImages not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) UpdateImage(ctx context.Context, req *UpdateImageRequest) (*Image, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateImage not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) DeleteImage(ctx context.Context, req *DeleteImageRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteImage not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) CreateComment(ctx context.Context, req *CreateCommentRequest) (*Comment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateComment not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetComment(ctx context.Context, req *GetCommentRequest) (*Comment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComment not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetComments(ctx context.Context, req *GetCommentsRequest) (*GetCommentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComments not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) UpdateComment(ctx context.Context, req *UpdateCommentRequest) (*Comment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateComment not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) DeleteComment(ctx context.Context, req *DeleteCommentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteComment not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) CreateNarrative(ctx context.Context, req *CreateNarrativeRequest) (*Narrative, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNarrative not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetNarrative(ctx context.Context, req *GetNarrativeRequest) (*Narrative, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNarrative not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetNarratives(ctx context.Context, req *GetNarrativesRequest) (*GetNarrativesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNarratives not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) UpdateNarrative(ctx context.Context, req *UpdateNarrativeRequest) (*Narrative, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNarrative not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) DeleteNarrative(ctx context.Context, req *DeleteNarrativeRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNarrative not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) CreateWhereTag(ctx context.Context, req *CreateWhereTagRequest) (*WhereTag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWhereTag not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetWhereTag(ctx context.Context, req *GetWhereTagRequest) (*WhereTag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWhereTag not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) GetWhereTags(ctx context.Context, req *GetWhereTagsRequest) (*GetWhereTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWhereTags not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) UpdateWhereTag(ctx context.Context, req *UpdateWhereTagRequest) (*WhereTag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWhereTag not implemented")
}
func (*UnimplementedTransactionMetadataServiceServer) DeleteWhereTag(ctx context.Context, req *DeleteWhereTagRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWhereTag not implemented")
}

func RegisterTransactionMetadataServiceServer(s *grpc.Server, srv TransactionMetadataServiceServer) {
	s.RegisterService(&_TransactionMetadataService_serviceDesc, srv)
}

func _TransactionMetadataService_CreateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).CreateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/CreateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).CreateTag(ctx, req.(*CreateTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetTag(ctx, req.(*GetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetTags(ctx, req.(*GetTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_UpdateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).UpdateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/UpdateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).UpdateTag(ctx, req.(*UpdateTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).DeleteTag(ctx, req.(*DeleteTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_CreateImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).CreateImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/CreateImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).CreateImage(ctx, req.(*CreateImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetImage(ctx, req.(*GetImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetImages(ctx, req.(*GetImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_UpdateImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).UpdateImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/UpdateImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).UpdateImage(ctx, req.(*UpdateImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_DeleteImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).DeleteImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/DeleteImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).DeleteImage(ctx, req.(*DeleteImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).CreateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/CreateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).CreateComment(ctx, req.(*CreateCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetComment(ctx, req.(*GetCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetComments(ctx, req.(*GetCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_UpdateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).UpdateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/UpdateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).UpdateComment(ctx, req.(*UpdateCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).DeleteComment(ctx, req.(*DeleteCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_CreateNarrative_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNarrativeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).CreateNarrative(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/CreateNarrative",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).CreateNarrative(ctx, req.(*CreateNarrativeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetNarrative_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNarrativeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetNarrative(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetNarrative",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetNarrative(ctx, req.(*GetNarrativeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetNarratives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNarrativesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetNarratives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetNarratives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetNarratives(ctx, req.(*GetNarrativesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_UpdateNarrative_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNarrativeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).UpdateNarrative(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/UpdateNarrative",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).UpdateNarrative(ctx, req.(*UpdateNarrativeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_DeleteNarrative_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNarrativeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).DeleteNarrative(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/DeleteNarrative",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).DeleteNarrative(ctx, req.(*DeleteNarrativeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_CreateWhereTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWhereTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).CreateWhereTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/CreateWhereTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).CreateWhereTag(ctx, req.(*CreateWhereTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetWhereTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWhereTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetWhereTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetWhereTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetWhereTag(ctx, req.(*GetWhereTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_GetWhereTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWhereTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).GetWhereTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/GetWhereTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).GetWhereTags(ctx, req.(*GetWhereTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_UpdateWhereTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWhereTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).UpdateWhereTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/UpdateWhereTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).UpdateWhereTag(ctx, req.(*UpdateWhereTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionMetadataService_DeleteWhereTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWhereTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionMetadataServiceServer).DeleteWhereTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionmetadata.TransactionMetadataService/DeleteWhereTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionMetadataServiceServer).DeleteWhereTag(ctx, req.(*DeleteWhereTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionMetadataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transactionmetadata.TransactionMetadataService",
	HandlerType: (*TransactionMetadataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTag",
			Handler:    _TransactionMetadataService_CreateTag_Handler,
		},
		{
			MethodName: "GetTag",
			Handler:    _TransactionMetadataService_GetTag_Handler,
		},
		{
			MethodName: "GetTags",
			Handler:    _TransactionMetadataService_GetTags_Handler,
		},
		{
			MethodName: "UpdateTag",
			Handler:    _TransactionMetadataService_UpdateTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _TransactionMetadataService_DeleteTag_Handler,
		},
		{
			MethodName: "CreateImage",
			Handler:    _TransactionMetadataService_CreateImage_Handler,
		},
		{
			MethodName: "GetImage",
			Handler:    _TransactionMetadataService_GetImage_Handler,
		},
		{
			MethodName: "GetImages",
			Handler:    _TransactionMetadataService_GetImages_Handler,
		},
		{
			MethodName: "UpdateImage",
			Handler:    _TransactionMetadataService_UpdateImage_Handler,
		},
		{
			MethodName: "DeleteImage",
			Handler:    _TransactionMetadataService_DeleteImage_Handler,
		},
		{
			MethodName: "CreateComment",
			Handler:    _TransactionMetadataService_CreateComment_Handler,
		},
		{
			MethodName: "GetComment",
			Handler:    _TransactionMetadataService_GetComment_Handler,
		},
		{
			MethodName: "GetComments",
			Handler:    _TransactionMetadataService_GetComments_Handler,
		},
		{
			MethodName: "UpdateComment",
			Handler:    _TransactionMetadataService_UpdateComment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _TransactionMetadataService_DeleteComment_Handler,
		},
		{
			MethodName: "CreateNarrative",
			Handler:    _TransactionMetadataService_CreateNarrative_Handler,
		},
		{
			MethodName: "GetNarrative",
			Handler:    _TransactionMetadataService_GetNarrative_Handler,
		},
		{
			MethodName: "GetNarratives",
			Handler:    _TransactionMetadataService_GetNarratives_Handler,
		},
		{
			MethodName: "UpdateNarrative",
			Handler:    _TransactionMetadataService_UpdateNarrative_Handler,
		},
		{
			MethodName: "DeleteNarrative",
			Handler:    _TransactionMetadataService_DeleteNarrative_Handler,
		},
		{
			MethodName: "CreateWhereTag",
			Handler:    _TransactionMetadataService_CreateWhereTag_Handler,
		},
		{
			MethodName: "GetWhereTag",
			Handler:    _TransactionMetadataService_GetWhereTag_Handler,
		},
		{
			MethodName: "GetWhereTags",
			Handler:    _TransactionMetadataService_GetWhereTags_Handler,
		},
		{
			MethodName: "UpdateWhereTag",
			Handler:    _TransactionMetadataService_UpdateWhereTag_Handler,
		},
		{
			MethodName: "DeleteWhereTag",
			Handler:    _TransactionMetadataService_DeleteWhereTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/transactionmetadata/all.proto",
}
